{"version":3,"sources":["../../src/layouts/input.js"],"names":[],"mappings":"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","file":"input.js","sourcesContent":["import React, { Component } from \"react\"\nimport { findDOMNode } from \"react-dom\"\nimport { Overlay } from \"react-overlays\"\nimport { mountable } from \"react-prop-types\"\nimport MomentPropTypes from \"react-moment-proptypes\"\nimport Fade from \"../components/fade.js\"\nimport DateTimePickerInput from \"../components/input.js\"\nimport DateTimePickerContainer from \"../components/container.js\"\nimport DateTimePickerLayoutHorizontal from \"./horizontal.js\"\nimport DateTimePickerLayoutVertical from \"./vertical.js\"\nimport { MODE_DATE } from \"../config.js\"\nimport moment from \"moment\"\n\nclass DateTimePickerLayoutInput extends Component {\n\n    static propTypes = {\n        bsSize     : React.PropTypes.string,\n        container  : mountable,\n        datePicker : React.PropTypes.node,\n        dateTime   : MomentPropTypes.momentObj,\n        debug      : React.PropTypes.bool,\n        icon       : React.PropTypes.bool,\n        icons      : React.PropTypes.object,\n        sideBySide : React.PropTypes.bool,\n        timePicker : React.PropTypes.node,\n        value      : React.PropTypes.string,\n\n        inputComponent: React.PropTypes.func\n    };\n\n    static defaultProps = {\n        container : global.document.querySelector(\"body\"),\n        inputComponent: DateTimePickerInput\n    };\n\n    state = {\n        show : false\n    };\n\n    componentWillReceiveProps (props) {\n        const { show } = this.state\n        const {\n            mode,\n            keepOpen,\n            dateTime,\n            selected\n        } = props\n\n        const dayChanged = moment(this.props.dateTime).date() !== moment(dateTime).date()\n\n        if (show && selected && dayChanged && !keepOpen && mode === MODE_DATE) {\n            this.setState({ show : false })\n        }\n    }\n\n    onClickInput = (e) => {\n        e.preventDefault()\n\n        this.setState({\n            show : !this.state.show\n        })\n    };\n\n    onHidePopup = () => {\n        this.setState({ show : false })\n    };\n\n    onClickClose = () => {\n        this.setState({ show : false })\n    };\n\n    render () {\n        const {\n            container,\n            debug,\n            sideBySide,\n            inputComponent: InputComponent\n        } = this.props\n        const { show } = this.state\n        let picker\n\n        if (sideBySide) {\n            picker = (\n                <DateTimePickerLayoutHorizontal { ...this.props } />\n            )\n        } else {\n            picker = (\n                <DateTimePickerLayoutVertical { ...this.props }\n                                              onClickClose={ this.onClickClose } />\n            )\n        }\n\n        const target = () => findDOMNode(this.refs.input)\n\n        return (\n            <div style={ { position : \"relative\" } }>\n                <InputComponent { ...this.props }\n                                     show={ show }\n                                     ref=\"input\"\n                                     onClick={ this.onClickInput } />\n                <Overlay placement=\"bottom\"\n                         show={ show }\n                         rootClose={ !debug }\n                         transition={ Fade }\n                         onHide={ this.onHidePopup }\n                         container={ container }\n                         unmountOnExit\n                         target={ target }>\n                    <DateTimePickerContainer { ...this.props }\n                                             target={ target }>\n                        { picker }\n                    </DateTimePickerContainer>\n                </Overlay>\n            </div>\n        )\n    }\n\n}\n\nexport default DateTimePickerLayoutInput\n"]}