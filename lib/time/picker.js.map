{"version":3,"sources":["../../src/time/picker.js"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;IAMM,U;;;AASF,0BAAsB;AAAA;;AAAA;;AAAA,0CAAN,IAAM;AAAN,gBAAM;AAAA;;AAAA,iKACT,IADS;;AAAA,cAMtB,KANsB,GAMd;AACJ,wBAAa,KADT;AAEJ;AAFI,SANc;;AAAA,cAyBtB,YAzBsB,GAyBP,UAAC,CAAD,EAAO;AAClB,cAAE,cAAF;AACA,kBAAK,QAAL,CAAc;AACV;AADU,aAAd;AAGH,SA9BqB;;AAAA,cAgCtB,cAhCsB,GAgCL,UAAC,CAAD,EAAO;AACpB,cAAE,cAAF;AACA,kBAAK,QAAL,CAAc;AACV;AADU,aAAd;AAGH,SArCqB;;AAAA,cAuCtB,YAvCsB,GAuCP,UAAC,IAAD,EAAU;AAAA,8BAIjB,MAAK,KAJY;AAAA,gBAEjB,QAFiB,eAEjB,QAFiB;AAAA,gBAGjB,QAHiB,eAGjB,QAHiB;;;AAMrB,qBAAS,sBAAO,QAAP,EAAiB,IAAjB,CAAsB,KAAK,IAAL,EAAtB,EAAmC,OAAnC,CAA2C,KAAK,OAAL,EAA3C,CAAT;;AAEA,kBAAK,QAAL,CAAc;AACV;AADU,aAAd;AAGH,SAlDqB;;AAGlB,cAAK,KAAL,GAAa,OAAO,MAAP,CAAc,EAAd,EAAkB,MAAK,KAAvB,EAA8B,EAAE,YAAa,MAAK,cAAL,EAAf,EAA9B,CAAb;AAHkB;AAIrB;;;;oDAO4B;AACzB,iBAAK,QAAL,CAAc,EAAE,YAAa,KAAK,cAAL,EAAf,EAAd;AACH;;;yCAEiB;AAAA,gBACN,MADM,GACK,KAAK,KADV,CACN,MADM;;AAEd,gBAAM,eAAe,wBAAS,MAAT,CAAgB,MAAhB,CAArB;AACA,gBAAM,eAAe,CAAC,IAAD,EAAO,KAAP,EAAc,GAAd,CAAkB,UAAC,CAAD;AAAA,uBAAO,aAAa,UAAb,GAA0B,cAA1B,CAAyC,CAAzC,CAAP;AAAA,aAAlB,EAAsE,IAAtE,CAA2E,GAA3E,CAArB;;AAEA,mBACI,aAAa,WAAb,GAA2B,OAA3B,CAAmC,GAAnC,IAA0C,CAA1C,IAA+C,aAAa,OAAb,CAAqB,UAArB,EAAiC,EAAjC,EAAqC,OAArC,CAA6C,GAA7C,IAAoD,CADvG;AAGH;;;yCA6BiB;AAAA,yBAIV,KAAK,KAJK;AAAA,gBAEV,UAFU,UAEV,UAFU;AAAA,gBAGV,QAHU,UAGV,QAHU;;;AAMd,oBAAQ,QAAR;AACI;AACI,2BACI,4DAAsB,KAAK,KAA3B;AACiB,oCAAa,UAD9B;AAEiB,kCAAW,KAAK,YAFjC,IADJ;;AAMJ;AACI,2BACI,8DAAwB,KAAK,KAA7B;AACmB,kCAAW,KAAK,YADnC,IADJ;;AAKJ;AACI,2BACI,yDAAgB,YAAa,UAA7B;AACgB,sCAAe,KAAK,YADpC;AAEgB,wCAAiB,KAAK,cAFtC;AAGgB,kCAAW,KAAK;AAHhC,uBAIqB,KAAK,KAJ1B,EADJ;AAfR;AAuBH;;;iCAES;AAAA,gBACE,UADF,GACiB,KAAK,KADtB,CACE,UADF;;AAEN,gBAAM,UAAU,0BAAW,YAAX,EAAyB,EAAE,YAAa,UAAf,EAAzB,CAAhB;AACA,mBACI;AAAA;gBAAA,EAAK,WAAY,OAAjB;gBACM,KAAK,cAAL;AADN,aADJ;AAKH;;;;;;AApGC,U,CAEK,S,GAAY;AACf,cAAa,+BAAgB,SADd;AAEf,YAAa,gBAAM,SAAN,CAAgB,MAFd;AAGf,cAAa,gBAAM,SAAN,CAAgB,IAHd;AAIf,gBAAa,gBAAM,SAAN,CAAgB;AAJd,C;kBAsGR,U","file":"picker.js","sourcesContent":["import React, { Component } from \"react\"\nimport MomentPropTypes from \"react-moment-proptypes\"\nimport classNames from \"classnames\"\nimport moment from \"moment\"\nimport TimePickerTime from \"./time.js\"\nimport TimePickerHours from \"./hours.js\"\nimport TimePickerMinutes from \"./minutes.js\"\nimport {\n    VIEW_MODE_TIME,\n    VIEW_MODE_HOURS,\n    VIEW_MODE_MINUTES\n} from \"../config.js\"\n\nclass TimePicker extends Component {\n\n    static propTypes = {\n        dateTime   : MomentPropTypes.momentObj,\n        locale     : React.PropTypes.string,\n        onChange   : React.PropTypes.func,\n        sideBySide : React.PropTypes.bool\n    };\n\n    constructor (...args) {\n        super(...args)\n\n        this.state = Object.assign({}, this.state, { use24Hours : this.get24HoursFlag() })\n    }\n\n    state = {\n        use24Hours : false,\n        viewMode   : VIEW_MODE_TIME\n    };\n\n    componentWillReceiveProps () {\n        this.setState({ use24Hours : this.get24HoursFlag() })\n    }\n\n    get24HoursFlag () {\n        const { locale } = this.props\n        const momentLocale = moment().locale(locale)\n        const actualFormat = [\"LT\", \"LTS\"].map((f) => momentLocale.localeData().longDateFormat(f)).join(\" \")\n\n        return (\n            actualFormat.toLowerCase().indexOf(\"a\") < 1 && actualFormat.replace(/\\[.*?\\]/g, \"\").indexOf(\"h\") < 1\n        )\n    }\n\n    onClickHours = (e) => {\n        e.preventDefault()\n        this.setState({\n            viewMode : VIEW_MODE_HOURS\n        })\n    };\n\n    onClickMinutes = (e) => {\n        e.preventDefault()\n        this.setState({\n            viewMode : VIEW_MODE_MINUTES\n        })\n    };\n\n    onSelectTime = (date) => {\n        const {\n            dateTime,\n            onChange\n        } = this.props\n\n        onChange(moment(dateTime).hour(date.hour()).minutes(date.minutes()))\n\n        this.setState({\n            viewMode : VIEW_MODE_TIME\n        })\n    };\n\n    renderViewMode () {\n        const {\n            use24Hours,\n            viewMode\n        } = this.state\n\n        switch (viewMode) {\n            case VIEW_MODE_HOURS :\n                return (\n                    <TimePickerHours { ...this.props }\n                                     use24Hours={ use24Hours }\n                                     onSelect={ this.onSelectTime } />\n                )\n\n            case VIEW_MODE_MINUTES :\n                return (\n                    <TimePickerMinutes { ...this.props }\n                                       onSelect={ this.onSelectTime } />\n                )\n\n            default :\n                return (\n                    <TimePickerTime use24Hours={ use24Hours }\n                                    onClickHours={ this.onClickHours }\n                                    onClickMinutes={ this.onClickMinutes }\n                                    onSelect={ this.onSelectTime }\n                                    { ...this.props } />\n                )\n        }\n    }\n\n    render () {\n        const { sideBySide } = this.props\n        const classes = classNames(\"timepicker\", { \"col-md-6\" : sideBySide })\n        return (\n            <div className={ classes }>\n                { this.renderViewMode() }\n            </div>\n        )\n    }\n\n}\n\nexport default TimePicker\n"]}