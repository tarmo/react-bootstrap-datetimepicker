{"version":3,"sources":["../../src/components/slide.js"],"names":[],"mappings":"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","file":"slide.js","sourcesContent":["import React, { Component, cloneElement } from \"react\"\nimport { findDOMNode } from \"react-dom\"\nimport { Transition } from \"react-overlays\"\n\nconst TRANSITION_DURATION = 200\nconst TRANSITION_FRAME_DELAY = 5\nconst TRANSITION_HALF = 0.5\n\nclass DateTimePickerViewSlide extends Component {\n\n    static propTypes = {\n        children : React.PropTypes.element.isRequired,\n        collapse : React.PropTypes.bool,\n        in       : React.PropTypes.bool\n    };\n\n    easeDelta (progress) {\n        return (progress < TRANSITION_HALF) ? (2 * progress / 2) : ((2 - 2 * (1 - progress)) / 2)\n    }\n\n    transition = (slide, step) => {\n        const start = new Date()\n        slide.style.overflow = \"hidden\"\n        const timer = setInterval(() => {\n            const timePassed = new Date() - start\n            const progress = Math.min(1, timePassed / TRANSITION_DURATION)\n\n            const delta = this.easeDelta(progress)\n\n            step(delta)\n\n            if (progress === 1) {\n                clearInterval(timer)\n                slide.style.removeProperty(\"height\")\n                slide.style.removeProperty(\"overflow\")\n            }\n        }, TRANSITION_FRAME_DELAY)\n    };\n\n    slideToggle (slide, from, to) {\n        slide.style.height = `${from}px`\n\n        this.transition(slide, (delta) => {\n            let height\n            if (from > to) {\n                height = from - from * delta\n            } else {\n                height = to * delta\n            }\n            slide.style.height = `${height}px`\n        })\n    }\n\n    onEntering = () => {\n        const slide = findDOMNode(this.refs.slide)\n        const parent = slide.parentNode\n        const clone = slide.cloneNode(true)\n        clone.style.display = \"block\"\n        parent.appendChild(clone)\n        const height = clone.getBoundingClientRect().height\n        parent.removeChild(clone)\n        this.slideToggle(slide, 0, height)\n    };\n\n    onExiting = () => {\n        const slide = findDOMNode(this.refs.slide)\n        const height = slide.getBoundingClientRect().height\n        this.slideToggle(slide, height, 0)\n    };\n\n    renderWithCollapse () {\n        const { children } = this.props\n\n        return (\n            <Transition ref=\"slide\"\n                        in={ this.props.in }\n                        timeout={ TRANSITION_DURATION }\n                        onEntering={ this.onEntering }\n                        onExiting={ this.onExiting }\n                        enteredClassName=\"collapse in\"\n                        exitedClassName=\"collapse\">\n                { children }\n            </Transition>\n        )\n    }\n\n    renderWithoutCollapse () {\n        const { children } = this.props\n        const child = React.Children.only(children)\n        const styles = { display : \"none\" }\n\n        return cloneElement(child, Object.assign({}, child.props, {\n            style : Object.assign({}, child.props.style, !this.props.in ? styles : {})\n        }))\n    }\n\n    render () {\n        const { collapse } = this.props\n        return collapse ? this.renderWithCollapse() : this.renderWithoutCollapse()\n    }\n\n}\n\nexport default DateTimePickerViewSlide\n"]}