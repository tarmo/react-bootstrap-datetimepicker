{"version":3,"sources":["../../src/components/input.js"],"names":[],"mappings":"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","file":"input.js","sourcesContent":["import React, { Component } from \"react\"\nimport { findDOMNode } from \"react-dom\"\nimport classNames from \"classnames\"\nimport moment from \"moment\"\nimport { MODE_TIME } from \"../config.js\"\n\nclass DateTimePickerInput extends Component {\n\n    static propTypes = {\n        bsSize      : React.PropTypes.string,\n        focusOnShow : React.PropTypes.bool,\n        icon        : React.PropTypes.bool,\n        icons       : React.PropTypes.object,\n        inputProps  : React.PropTypes.object,\n        mode        : React.PropTypes.string,\n        onChange    : React.PropTypes.func,\n        onClick     : React.PropTypes.func,\n        show        : React.PropTypes.bool,\n        value       : React.PropTypes.string\n    };\n\n    state = {\n        value: this.props.value\n    };\n\n    componentDidUpdate () {\n        const {\n            focusOnShow,\n            show,\n            value\n        } = this.props\n        const input = findDOMNode(this.refs.input)\n\n        if (show && focusOnShow && input) {\n            input.focus()\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.value !== nextProps.value) {\n            this.setState({ value: nextProps.value })\n        }\n    }\n\n    onChangeInput = (e) => {\n        e.preventDefault()\n\n        this.setState({ value: e.target.value })\n    };\n\n    commitChange () {\n        const {\n            onChange,\n            displayFormat,\n            value: propsValue\n        } = this.props\n\n        const {\n            value\n        } = this.state;\n\n        if (!value) {\n            onChange(null);\n            return;\n        }\n\n        if (propsValue === value) {\n            // No change to commit\n            return;\n        }\n\n        const dateTime = moment(value, displayFormat)\n\n        if (dateTime.isValid()) {\n            onChange(dateTime)\n        } else {\n            const dateTimeIso = moment(this.state.value)\n\n            if (dateTimeIso.isValid()) {\n                onChange(dateTimeIso)\n            }\n        }\n    }\n\n    onBlur = () => {\n        this.commitChange()\n    };\n\n    onKeyPress = (e) => {\n        if (e.charCode === 13) {\n            this.commitChange()\n        }\n    };\n\n    render () {\n        const {\n            bsSize,\n            icons,\n            inputProps,\n            mode,\n            onClick,\n        } = this.props\n\n        const {\n            value\n        } = this.state\n\n        const classes = classNames(\n            \"input-group\",\n            \"date\",\n            {\n                [`input-group-${bsSize}`] : bsSize\n            }\n        )\n\n        const iconClasses = mode === MODE_TIME ? icons.time : icons.date\n\n        return (\n            <div className={ classes }>\n                <input className=\"form-control\"\n                       type=\"text\"\n                       ref=\"input\"\n                       value={ value }\n                       onChange={ this.onChangeInput }\n                       onBlur={ this.onBlur }\n                       onKeyPress={ this.onKeyPress }\n                       { ...inputProps } />\n\n                <span className=\"input-group-addon\"\n                      onClick={ onClick }>\n                    <span className={ iconClasses } />\n                </span>\n            </div>\n        )\n    }\n\n}\n\nexport default DateTimePickerInput\n"]}