{"version":3,"sources":["../src/picker.js"],"names":[],"mappings":"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","file":"picker.js","sourcesContent":["import \"core-js/fn/object/assign\"\nimport React, { Component } from \"react\"\nimport MomentPropTypes from \"react-moment-proptypes\"\nimport moment from \"moment\"\nimport { mountable, deprecated } from \"react-prop-types\"\nimport DatePicker from \"./date/picker.js\"\nimport TimePicker from \"./time/picker.js\"\nimport DateTimePickerLayoutInline from \"./layouts/inline.js\"\nimport DateTimePickerLayoutInput from \"./layouts/input.js\"\nimport {\n    BOOTSTRAP_SIZE_SM,\n    BOOTSTRAP_SIZE_LG,\n    DEFAULT_DAY_VIEW_HEADER,\n    DEFAULT_FORMAT,\n    INPUT_FORMAT_DATE,\n    INPUT_FORMAT_DATETIME,\n    INPUT_FORMAT_TIME,\n    MODE_DATE,\n    MODE_DATETIME,\n    MODE_TIME,\n    PLACEMENT_DEFAULT,\n    PLACEMENT_TOP,\n    PLACEMENT_BOTTOM,\n    VIEW_MODE_DAYS,\n    VIEW_MODE_MONTHS,\n    VIEW_MODE_YEARS,\n    VIEW_MODE_DECADES,\n    VIEW_DATE,\n    VIEW_TIME\n} from \"./config.js\"\n\nconst defaultIcons = {\n    time     : \"glyphicon glyphicon-time\",\n    date     : \"glyphicon glyphicon-calendar\",\n    up       : \"glyphicon glyphicon-chevron-up\",\n    down     : \"glyphicon glyphicon-chevron-down\",\n    previous : \"glyphicon glyphicon-chevron-left\",\n    next     : \"glyphicon glyphicon-chevron-right\",\n    today    : \"glyphicon glyphicon-screenshot\",\n    clear    : \"glyphicon glyphicon-trash\",\n    close    : \"glyphicon glyphicon-remove\"\n}\n\nconst defaultTooltips = {\n    today           : \"Go to today\",\n    clear           : \"Clear selection\",\n    close           : \"Close the picker\",\n    selectMonth     : \"Select Month\",\n    prevMonth       : \"Previous Month\",\n    nextMonth       : \"Next Month\",\n    selectYear      : \"Select Year\",\n    prevYear        : \"Previous Year\",\n    nextYear        : \"Next Year\",\n    selectDecade    : \"Select Decade\",\n    prevDecade      : \"Previous Decade\",\n    nextDecade      : \"Next Decade\",\n    prevCentury     : \"Previous Century\",\n    nextCentury     : \"Next Century\",\n    pickHour        : \"Pick Hour\",\n    incrementHour   : \"Increment Hour\",\n    decrementHour   : \"Decrement Hour\",\n    pickMinute      : \"Pick Minute\",\n    incrementMinute : \"Increment Minute\",\n    decrementMinute : \"Decrement Minute\",\n    pickSecond      : \"Pick Second\",\n    incrementSecond : \"Increment Second\",\n    decrementSecond : \"Decrement Second\",\n    togglePeriod    : \"Toggle Period\",\n    selectTime      : \"Select Time\"\n}\n\nclass DateTimePicker extends Component {\n\n    static propTypes = {\n        bsSize              : React.PropTypes.oneOf([BOOTSTRAP_SIZE_SM, BOOTSTRAP_SIZE_LG]),\n        collapse            : React.PropTypes.bool,\n        dateTime            : deprecated(React.PropTypes.string, \"Use \\\"value\\\" instead\"),\n        dayViewHeaderFormat : React.PropTypes.string,\n        daysOfWeekDisabled  : React.PropTypes.arrayOf(React.PropTypes.number),\n        debug               : React.PropTypes.bool,\n        defaultDate         : React.PropTypes.oneOfType([\n            React.PropTypes.number,\n            React.PropTypes.string,\n            React.PropTypes.instanceOf(Date),\n            MomentPropTypes.momentObj\n        ]),\n        disabledDates : React.PropTypes.oneOfType([\n            React.PropTypes.bool,\n            React.PropTypes.arrayOf(\n                React.PropTypes.oneOfType([\n                    React.PropTypes.number,\n                    React.PropTypes.string,\n                    React.PropTypes.instanceOf(Date),\n                    MomentPropTypes.momentObj\n                ])\n            )\n        ]),\n        enabledDates : React.PropTypes.oneOfType([\n            React.PropTypes.bool,\n            React.PropTypes.arrayOf(\n                React.PropTypes.oneOfType([\n                    React.PropTypes.number,\n                    React.PropTypes.string,\n                    React.PropTypes.instanceOf(Date),\n                    MomentPropTypes.momentObj\n                ])\n            )\n        ]),\n        focusOnShow : React.PropTypes.bool,\n        format      : React.PropTypes.string,\n        icon        : React.PropTypes.bool,\n        icons       : React.PropTypes.objectOf(React.PropTypes.string),\n        inline      : React.PropTypes.bool,\n        inputFormat : React.PropTypes.string,\n        inputProps  : React.PropTypes.object,\n        keepOpen    : React.PropTypes.bool,\n        locale      : React.PropTypes.string,\n        maxDate     : React.PropTypes.oneOfType([\n            React.PropTypes.number,\n            React.PropTypes.string,\n            React.PropTypes.instanceOf(Date),\n            MomentPropTypes.momentObj\n        ]),\n        minDate : React.PropTypes.oneOfType([\n            React.PropTypes.number,\n            React.PropTypes.string,\n            React.PropTypes.instanceOf(Date),\n            MomentPropTypes.momentObj\n        ]),\n        mode             : React.PropTypes.oneOf([MODE_DATE, MODE_TIME, MODE_DATETIME]),\n        onChange         : React.PropTypes.func,\n        placeholder      : React.PropTypes.string,\n        showClear        : React.PropTypes.bool,\n        showClose        : React.PropTypes.bool,\n        showToday        : React.PropTypes.bool,\n        showTodayButton  : React.PropTypes.bool,\n        sideBySide       : React.PropTypes.bool,\n        size             : deprecated(React.PropTypes.string, \"Use \\\"bsSize\\\" instead\"),\n        stepping         : React.PropTypes.number,\n        toolbarPlacement : React.PropTypes.oneOf([PLACEMENT_DEFAULT, PLACEMENT_TOP, PLACEMENT_BOTTOM]),\n        tooltips         : React.PropTypes.object,\n        useCurrent       : React.PropTypes.bool,\n        useStrict        : React.PropTypes.bool,\n        value            : React.PropTypes.oneOfType([\n            React.PropTypes.number,\n            React.PropTypes.string,\n            React.PropTypes.instanceOf(Date),\n            MomentPropTypes.momentObj\n        ]),\n        viewMode : React.PropTypes.oneOf([\n            VIEW_MODE_DAYS,\n            VIEW_MODE_MONTHS,\n            VIEW_MODE_YEARS,\n            VIEW_MODE_DECADES\n        ]),\n        widgetParent      : mountable,\n        widgetPositioning : React.PropTypes.oneOf([PLACEMENT_TOP, PLACEMENT_BOTTOM])\n\n        // TODO: Properties to implement from original plugin\n        // http://eonasdan.github.io/bootstrap-datetimepicker/Options/\n        /*\n        extraFormats          : React.PropTypes.any,\n        calendarWeeks         : React.PropTypes.any,\n        keepInvalid           : React.PropTypes.any,\n        disabledTimeIntervals : React.PropTypes.any,\n        enabledHours          : React.PropTypes.any,\n        disabledHours         : React.PropTypes.any\n        */\n    };\n\n    static defaultProps = {\n        collapse            : true,\n        dayViewHeaderFormat : DEFAULT_DAY_VIEW_HEADER,\n        disabledDates       : false,\n        enabledDates        : false,\n        focusOnShow         : true,\n        format              : DEFAULT_FORMAT,\n        icon                : true,\n        icons               : {},\n        locale              : moment.locale(),\n        mode                : MODE_DATETIME,\n        onChange            : () => {},\n        placement           : PLACEMENT_BOTTOM,\n        showToday           : true,\n        stepping            : 1,\n        toolbarPlacement    : PLACEMENT_DEFAULT,\n        tooltips            : {},\n        useCurrent          : true,\n        viewMode            : VIEW_MODE_DAYS\n    };\n\n    constructor (...args) {\n        super(...args)\n\n        const {\n            defaultDate,\n            icons,\n            mode,\n            tooltips,\n            useCurrent,\n            viewMode\n        } = this.props\n\n        this.icons = Object.assign({}, defaultIcons, icons)\n        this.tooltips = Object.assign({}, tooltips, defaultTooltips)\n\n        let dateTime = moment()\n\n        if (defaultDate) {\n            if (mode === MODE_DATE) {\n                dateTime = moment(defaultDate).startOf(\"day\")\n            } else {\n                dateTime = moment(defaultDate)\n            }\n        } else if (mode === MODE_DATE) {\n            dateTime = moment().startOf(\"day\")\n        }\n\n        this.state = Object.assign({}, this.state, {\n            dateTime,\n            selected : !!defaultDate || useCurrent,\n            viewMode : this.state.viewMode || viewMode\n        })\n    }\n\n    state = {\n        view : VIEW_DATE\n    };\n\n    componentWillReceiveProps (props) {\n        let state = {}\n        if (props.value) {\n            const dateTime = moment(props.value)\n            if (dateTime.isValid()) {\n                state = Object.assign({}, state, {\n                    selected : true,\n                    dateTime\n                })\n            }\n        } else if (!props.value) {\n            state = Object.assign({}, state, {\n                selected : false\n            })\n        }\n        this.setState(Object.assign({}, this.state, state))\n    }\n\n    icons = {};\n    tooltips = {};\n\n    renderDatePicker () {\n        const { mode } = this.props\n\n        const {\n            dateTime,\n            selected,\n            view,\n            viewMode\n        } = this.state\n\n        if (mode === MODE_DATETIME || mode === MODE_DATE) {\n            return (\n                <DatePicker { ...this.props }\n                            icons={ this.icons }\n                            tooltips={ this.tooltips }\n                            show={ view === VIEW_DATE }\n                            onChange={ this.onChangeDateTime }\n                            viewMode={ viewMode }\n                            selected={ selected }\n                            updateViewMode={ this.updateViewMode }\n                            dateTime={ dateTime } />\n            )\n        }\n    }\n\n    renderTimePicker () {\n        const { mode } = this.props\n\n        const {\n            dateTime,\n            selected,\n            view\n        } = this.state\n\n        if (mode === MODE_DATETIME || mode === MODE_TIME) {\n            return (\n                <TimePicker { ...this.props }\n                            icons={ this.icons }\n                            tooltips={ this.tooltips }\n                            onChange={ this.onChangeDateTime }\n                            dateTime={ dateTime }\n                            selected={ selected }\n                            show={ view === VIEW_TIME } />\n            )\n        }\n    }\n\n    onChangeInput = (dateTime) => {\n        this.onChangeDateTime(dateTime);\n    };\n\n    onChangeDateTime = (date, clear = false, ignore = false) => {\n        this.setState({\n            dateTime : date ? moment(date) : moment(),\n            selected : date && !clear\n        }, () => {\n            const {\n                format,\n                locale,\n                onChange\n            } = this.props\n\n            const {\n                dateTime,\n                selected\n            } = this.state\n\n            if (!ignore) {\n                onChange((clear || !selected) ? null : moment(dateTime).locale(locale).format(format))\n            }\n        })\n    };\n\n    onClickToday = () => {\n        const { dateTime } = this.state\n        const date = moment()\n\n        this.onChangeDateTime(moment(dateTime).year(date.year()).month(date.month()).date(date.date()))\n\n    };\n\n    onClickClear = () => {\n        this.onChangeDateTime(moment(), true)\n    };\n\n    updateViewMode = (viewMode) => {\n        this.setState({ viewMode })\n    };\n\n    render () {\n        const {\n            bsSize,\n            inline,\n            inputFormat,\n            mode,\n            placeholder,\n            size,\n            widgetParent\n        } = this.props\n        const {\n            dateTime,\n            selected\n        } = this.state\n        let displayFormat = inputFormat\n\n        if (!inputFormat) {\n            switch (mode) {\n                case MODE_DATE :\n                    displayFormat = INPUT_FORMAT_DATE\n                    break\n\n                case MODE_TIME :\n                    displayFormat = INPUT_FORMAT_TIME\n                    break\n\n                default :\n                    displayFormat = INPUT_FORMAT_DATETIME\n            }\n        }\n\n        const inputValue = selected ? moment(dateTime).format(displayFormat) : placeholder\n\n        let picker\n\n        if (inline) {\n            picker = (\n                <DateTimePickerLayoutInline { ...this.props }\n                                            displayFormat={ displayFormat }\n                                            tooltips={ this.tooltips }\n                                            icons={ this.icons }\n                                            onClickToday={ this.onClickToday }\n                                            onClickClear={ this.onClickClear }\n                                            datePicker={ this.renderDatePicker() }\n                                            timePicker={ this.renderTimePicker() } />\n            )\n        } else {\n            picker = (\n                <DateTimePickerLayoutInput { ...this.props }\n                                           displayFormat={ displayFormat }\n                                           tooltips={ this.tooltips }\n                                           icons={ this.icons }\n                                           bsSize={ bsSize || size }\n                                           value={ inputValue }\n                                           selected={ selected }\n                                           dateTime={ dateTime }\n                                           container={ widgetParent }\n                                           onChange={ this.onChangeInput }\n                                           onClickToday={ this.onClickToday }\n                                           onClickClear={ this.onClickClear }\n                                           datePicker={ this.renderDatePicker() }\n                                           timePicker={ this.renderTimePicker() } />\n            )\n        }\n\n        return (\n            <div ref=\"component\">\n                { picker }\n            </div>\n        )\n    }\n\n}\n\nexport default DateTimePicker\n"]}