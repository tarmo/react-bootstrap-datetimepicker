{"version":3,"sources":["../src/picker.js"],"names":[],"mappings":"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","file":"picker.js","sourcesContent":["import \"core-js/fn/object/assign\"\nimport React, { Component } from \"react\"\nimport MomentPropTypes from \"react-moment-proptypes\"\nimport moment from \"moment\"\nimport { mountable, deprecated } from \"react-prop-types\"\nimport DatePicker from \"./date/picker.js\"\nimport TimePicker from \"./time/picker.js\"\nimport DateTimePickerLayoutInline from \"./layouts/inline.js\"\nimport DateTimePickerLayoutInput from \"./layouts/input.js\"\nimport {\n    BOOTSTRAP_SIZE_SM,\n    BOOTSTRAP_SIZE_LG,\n    DEFAULT_DAY_VIEW_HEADER,\n    DEFAULT_FORMAT,\n    INPUT_FORMAT_DATE,\n    INPUT_FORMAT_DATETIME,\n    INPUT_FORMAT_TIME,\n    MODE_DATE,\n    MODE_DATETIME,\n    MODE_TIME,\n    PLACEMENT_DEFAULT,\n    PLACEMENT_TOP,\n    PLACEMENT_BOTTOM,\n    VIEW_MODE_DAYS,\n    VIEW_MODE_MONTHS,\n    VIEW_MODE_YEARS,\n    VIEW_MODE_DECADES,\n    VIEW_DATE,\n    VIEW_TIME\n} from \"./config.js\"\n\nconst defaultIcons = {\n    time     : \"glyphicon glyphicon-time\",\n    date     : \"glyphicon glyphicon-calendar\",\n    up       : \"glyphicon glyphicon-chevron-up\",\n    down     : \"glyphicon glyphicon-chevron-down\",\n    previous : \"glyphicon glyphicon-chevron-left\",\n    next     : \"glyphicon glyphicon-chevron-right\",\n    today    : \"glyphicon glyphicon-screenshot\",\n    clear    : \"glyphicon glyphicon-trash\",\n    close    : \"glyphicon glyphicon-remove\"\n}\n\nconst defaultTooltips = {\n    today           : \"Go to today\",\n    clear           : \"Clear selection\",\n    close           : \"Close the picker\",\n    selectMonth     : \"Select Month\",\n    prevMonth       : \"Previous Month\",\n    nextMonth       : \"Next Month\",\n    selectYear      : \"Select Year\",\n    prevYear        : \"Previous Year\",\n    nextYear        : \"Next Year\",\n    selectDecade    : \"Select Decade\",\n    prevDecade      : \"Previous Decade\",\n    nextDecade      : \"Next Decade\",\n    prevCentury     : \"Previous Century\",\n    nextCentury     : \"Next Century\",\n    pickHour        : \"Pick Hour\",\n    incrementHour   : \"Increment Hour\",\n    decrementHour   : \"Decrement Hour\",\n    pickMinute      : \"Pick Minute\",\n    incrementMinute : \"Increment Minute\",\n    decrementMinute : \"Decrement Minute\",\n    pickSecond      : \"Pick Second\",\n    incrementSecond : \"Increment Second\",\n    decrementSecond : \"Decrement Second\",\n    togglePeriod    : \"Toggle Period\",\n    selectTime      : \"Select Time\"\n}\n\nclass DateTimePicker extends Component {\n\n    static propTypes = {\n        bsSize              : React.PropTypes.oneOf([BOOTSTRAP_SIZE_SM, BOOTSTRAP_SIZE_LG]),\n        collapse            : React.PropTypes.bool,\n        dateTime            : deprecated(React.PropTypes.string, \"Use \\\"value\\\" instead\"),\n        dayViewHeaderFormat : React.PropTypes.string,\n        daysOfWeekDisabled  : React.PropTypes.arrayOf(React.PropTypes.number),\n        debug               : React.PropTypes.bool,\n        defaultDate         : React.PropTypes.oneOfType([\n            React.PropTypes.number,\n            React.PropTypes.string,\n            React.PropTypes.instanceOf(Date),\n            MomentPropTypes.momentObj\n        ]),\n        disabledDates : React.PropTypes.oneOfType([\n            React.PropTypes.bool,\n            React.PropTypes.func,\n            React.PropTypes.arrayOf(\n                React.PropTypes.oneOfType([\n                    React.PropTypes.number,\n                    React.PropTypes.string,\n                    React.PropTypes.instanceOf(Date),\n                    MomentPropTypes.momentObj\n                ])\n            )\n        ]),\n        enabledDates : React.PropTypes.oneOfType([\n            React.PropTypes.bool,\n            React.PropTypes.func,\n            React.PropTypes.arrayOf(\n                React.PropTypes.oneOfType([\n                    React.PropTypes.number,\n                    React.PropTypes.string,\n                    React.PropTypes.instanceOf(Date),\n                    MomentPropTypes.momentObj\n                ])\n            )\n        ]),\n        focusOnShow : React.PropTypes.bool,\n        format      : React.PropTypes.string,\n        icon        : React.PropTypes.bool,\n        icons       : React.PropTypes.objectOf(React.PropTypes.string),\n        inline      : React.PropTypes.bool,\n        inputFormat : React.PropTypes.string,\n        inputProps  : React.PropTypes.object,\n        keepOpen    : React.PropTypes.bool,\n        locale      : React.PropTypes.string,\n        maxDate     : React.PropTypes.oneOfType([\n            React.PropTypes.number,\n            React.PropTypes.string,\n            React.PropTypes.instanceOf(Date),\n            MomentPropTypes.momentObj\n        ]),\n        minDate : React.PropTypes.oneOfType([\n            React.PropTypes.number,\n            React.PropTypes.string,\n            React.PropTypes.instanceOf(Date),\n            MomentPropTypes.momentObj\n        ]),\n        mode             : React.PropTypes.oneOf([MODE_DATE, MODE_TIME, MODE_DATETIME]),\n        onChange         : React.PropTypes.func,\n        placeholder      : React.PropTypes.string,\n        showClear        : React.PropTypes.bool,\n        showClose        : React.PropTypes.bool,\n        showToday        : React.PropTypes.bool,\n        showTodayButton  : React.PropTypes.bool,\n        sideBySide       : React.PropTypes.bool,\n        size             : deprecated(React.PropTypes.string, \"Use \\\"bsSize\\\" instead\"),\n        stepping         : React.PropTypes.number,\n        toolbarPlacement : React.PropTypes.oneOf([PLACEMENT_DEFAULT, PLACEMENT_TOP, PLACEMENT_BOTTOM]),\n        tooltips         : React.PropTypes.object,\n        useCurrent       : React.PropTypes.bool,\n        useStrict        : React.PropTypes.bool,\n        value            : React.PropTypes.oneOfType([\n            React.PropTypes.number,\n            React.PropTypes.string,\n            React.PropTypes.instanceOf(Date),\n            MomentPropTypes.momentObj\n        ]),\n        viewMode : React.PropTypes.oneOf([\n            VIEW_MODE_DAYS,\n            VIEW_MODE_MONTHS,\n            VIEW_MODE_YEARS,\n            VIEW_MODE_DECADES\n        ]),\n        widgetParent      : mountable,\n        widgetPositioning : React.PropTypes.oneOf([PLACEMENT_TOP, PLACEMENT_BOTTOM])\n\n        // TODO: Properties to implement from original plugin\n        // http://eonasdan.github.io/bootstrap-datetimepicker/Options/\n        /*\n        extraFormats          : React.PropTypes.any,\n        calendarWeeks         : React.PropTypes.any,\n        keepInvalid           : React.PropTypes.any,\n        disabledTimeIntervals : React.PropTypes.any,\n        enabledHours          : React.PropTypes.any,\n        disabledHours         : React.PropTypes.any\n        */\n    };\n\n    static defaultProps = {\n        collapse            : true,\n        dayViewHeaderFormat : DEFAULT_DAY_VIEW_HEADER,\n        disabledDates       : false,\n        enabledDates        : false,\n        focusOnShow         : true,\n        format              : DEFAULT_FORMAT,\n        icon                : true,\n        icons               : {},\n        locale              : moment.locale(),\n        mode                : MODE_DATETIME,\n        onChange            : () => {},\n        placement           : PLACEMENT_BOTTOM,\n        showToday           : true,\n        stepping            : 1,\n        toolbarPlacement    : PLACEMENT_DEFAULT,\n        tooltips            : {},\n        useCurrent          : true,\n        viewMode            : VIEW_MODE_DAYS\n    };\n\n    constructor (...args) {\n        super(...args)\n\n        const {\n            defaultDate,\n            icons,\n            mode,\n            tooltips,\n            useCurrent,\n            viewMode\n        } = this.props\n\n        this.icons = Object.assign({}, defaultIcons, icons)\n        this.tooltips = Object.assign({}, tooltips, defaultTooltips)\n\n        let dateTime = moment()\n\n        if (defaultDate) {\n            if (mode === MODE_DATE) {\n                dateTime = moment(defaultDate).startOf(\"day\")\n            } else {\n                dateTime = moment(defaultDate)\n            }\n        } else if (mode === MODE_DATE) {\n            dateTime = moment().startOf(\"day\")\n        }\n\n        this.state = Object.assign({}, this.state, {\n            dateTime,\n            selected : !!defaultDate || useCurrent,\n            viewMode : this.state.viewMode || viewMode\n        })\n    }\n\n    state = {\n        view : VIEW_DATE\n    };\n\n    componentWillReceiveProps (props) {\n        let state = {}\n        if (props.value) {\n            const dateTime = moment(props.value)\n            if (dateTime.isValid()) {\n                state = Object.assign({}, state, {\n                    selected : true,\n                    dateTime\n                })\n            }\n        } else if (!props.value) {\n            state = Object.assign({}, state, {\n                selected : false\n            })\n        }\n        this.setState(Object.assign({}, this.state, state))\n    }\n\n    icons = {};\n    tooltips = {};\n\n    renderDatePicker () {\n        const { mode } = this.props\n\n        const {\n            dateTime,\n            selected,\n            view,\n            viewMode\n        } = this.state\n\n        if (mode === MODE_DATETIME || mode === MODE_DATE) {\n            return (\n                <DatePicker { ...this.props }\n                            icons={ this.icons }\n                            tooltips={ this.tooltips }\n                            show={ view === VIEW_DATE }\n                            onChange={ this.onChangeDateTime }\n                            viewMode={ viewMode }\n                            selected={ selected }\n                            updateViewMode={ this.updateViewMode }\n                            dateTime={ dateTime } />\n            )\n        }\n    }\n\n    renderTimePicker () {\n        const { mode } = this.props\n\n        const {\n            dateTime,\n            selected,\n            view\n        } = this.state\n\n        if (mode === MODE_DATETIME || mode === MODE_TIME) {\n            return (\n                <TimePicker { ...this.props }\n                            icons={ this.icons }\n                            tooltips={ this.tooltips }\n                            onChange={ this.onChangeDateTime }\n                            dateTime={ dateTime }\n                            selected={ selected }\n                            show={ view === VIEW_TIME } />\n            )\n        }\n    }\n\n    onChangeInput = (dateTime) => {\n        this.onChangeDateTime(dateTime);\n    };\n\n    onChangeDateTime = (date, clear = false, ignore = false) => {\n        this.setState({\n            dateTime : date ? moment(date) : moment(),\n            selected : date && !clear\n        }, () => {\n            const {\n                format,\n                locale,\n                onChange\n            } = this.props\n\n            const {\n                dateTime,\n                selected\n            } = this.state\n\n            if (!ignore) {\n                onChange((clear || !selected) ? null : moment(dateTime).locale(locale).format(format))\n            }\n        })\n    };\n\n    onClickToday = () => {\n        const { dateTime } = this.state\n        const date = moment()\n\n        this.onChangeDateTime(moment(dateTime).year(date.year()).month(date.month()).date(date.date()))\n\n    };\n\n    onClickClear = () => {\n        this.onChangeDateTime(moment(), true)\n    };\n\n    updateViewMode = (viewMode) => {\n        this.setState({ viewMode })\n    };\n\n    render () {\n        const {\n            bsSize,\n            inline,\n            inputFormat,\n            mode,\n            placeholder,\n            size,\n            widgetParent\n        } = this.props\n        const {\n            dateTime,\n            selected\n        } = this.state\n        let displayFormat = inputFormat\n\n        if (!inputFormat) {\n            switch (mode) {\n                case MODE_DATE :\n                    displayFormat = INPUT_FORMAT_DATE\n                    break\n\n                case MODE_TIME :\n                    displayFormat = INPUT_FORMAT_TIME\n                    break\n\n                default :\n                    displayFormat = INPUT_FORMAT_DATETIME\n            }\n        }\n\n        const inputValue = selected ? moment(dateTime).format(displayFormat) : placeholder\n\n        let picker\n\n        if (inline) {\n            picker = (\n                <DateTimePickerLayoutInline { ...this.props }\n                                            displayFormat={ displayFormat }\n                                            tooltips={ this.tooltips }\n                                            icons={ this.icons }\n                                            onClickToday={ this.onClickToday }\n                                            onClickClear={ this.onClickClear }\n                                            datePicker={ this.renderDatePicker() }\n                                            timePicker={ this.renderTimePicker() } />\n            )\n        } else {\n            picker = (\n                <DateTimePickerLayoutInput { ...this.props }\n                                           displayFormat={ displayFormat }\n                                           tooltips={ this.tooltips }\n                                           icons={ this.icons }\n                                           bsSize={ bsSize || size }\n                                           value={ inputValue }\n                                           selected={ selected }\n                                           dateTime={ dateTime }\n                                           container={ widgetParent }\n                                           onChange={ this.onChangeInput }\n                                           onClickToday={ this.onClickToday }\n                                           onClickClear={ this.onClickClear }\n                                           datePicker={ this.renderDatePicker() }\n                                           timePicker={ this.renderTimePicker() } />\n            )\n        }\n\n        return (\n            <div ref=\"component\">\n                { picker }\n            </div>\n        )\n    }\n\n}\n\nexport default DateTimePicker\n"]}